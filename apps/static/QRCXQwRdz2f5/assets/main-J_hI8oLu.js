(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const r of o.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&i(r)}).observe(document,{childList:!0,subtree:!0});function l(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerPolicy&&(o.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?o.credentials="include":s.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(s){if(s.ep)return;s.ep=!0;const o=l(s);fetch(s.href,o)}})();console.log(typeof PluginMessageHandler<"u"?"Running as R1 Creation - Rabbit Flashlight":"Running in browser mode - Rabbit Flashlight");let n={brightness:100,color:"#ffffff",isColorMenuOpen:!1};const c=[10,25,50,75,100];let a=4;function w(){const e=document.getElementById("colorWheel"),t=e.getContext("2d"),l=e.width/2,i=e.height/2,s=e.width/2-5;for(let o=0;o<360;o+=1){const r=(o-1)*Math.PI/180,g=o*Math.PI/180;t.beginPath(),t.arc(l,i,s,r,g),t.lineWidth=s,t.strokeStyle=`hsl(${o}, 100%, 50%)`,t.stroke()}e.addEventListener("click",o=>{const r=e.getBoundingClientRect(),g=o.clientX-r.left-l,f=o.clientY-r.top-i,p=`hsl(${(Math.atan2(f,g)*180/Math.PI+360)%360}, 100%, 50%)`;h(p)})}function h(e){n.color=e,document.body.style.backgroundColor=e,u(),console.log("Flashlight color changed to:",e)}function d(e){n.brightness=e;const t=e/100;document.body.style.opacity=t;const l=c.indexOf(e);l!==-1&&(a=l,document.getElementById("brightnessSlider").value=l),u(),console.log("Brightness set to:",e+"%")}function y(){a<c.length-1&&(a++,d(c[a]))}function m(){a>0&&(a--,d(c[a]))}window.addEventListener("scrollUp",()=>{console.log("Scroll up detected - increasing brightness"),y()});window.addEventListener("scrollDown",()=>{console.log("Scroll down detected - decreasing brightness"),m()});window.addEventListener("sideClick",()=>{console.log("Side button clicked - toggling color menu"),b()});window.addEventListener("longPressStart",()=>{console.log("Long press started - resetting to white")});window.addEventListener("longPressEnd",()=>{console.log("Long press ended - reset to white flashlight"),h("#ffffff"),d(100)});function b(){const e=document.getElementById("colorMenu");n.isColorMenuOpen=!n.isColorMenuOpen,n.isColorMenuOpen?(e.style.display="block",e.style.opacity="1"):(e.style.opacity="0",setTimeout(()=>{e.style.display="none"},300)),u()}window.onPluginMessage=function(e){if(console.log("Received plugin message:",e),e.data)try{const t=typeof e.data=="string"?JSON.parse(e.data):e.data;console.log("Parsed data:",t)}catch{console.log("Data as text:",e.data)}e.message&&console.log("Message text:",e.message)};async function u(){if(window.creationStorage)try{const e=btoa(JSON.stringify(n));await window.creationStorage.plain.setItem("flashlight_state",e),console.log("Flashlight state saved")}catch(e){console.error("Error saving flashlight state:",e)}else localStorage.setItem("flashlight_state",JSON.stringify(n))}async function S(){if(window.creationStorage)try{const e=await window.creationStorage.plain.getItem("flashlight_state");if(e){const t=JSON.parse(atob(e));return n={...n,...t},console.log("Flashlight state loaded:",n),n}}catch(e){console.error("Error loading flashlight state:",e)}else{const e=localStorage.getItem("flashlight_state");if(e){const t=JSON.parse(e);return n={...n,...t},console.log("Flashlight state loaded from localStorage:",n),n}}return n}document.addEventListener("DOMContentLoaded",async()=>{console.log("Rabbit Flashlight initialized!"),await S(),w();const e=document.getElementById("brightnessSlider");e&&e.addEventListener("input",l=>{const i=parseInt(l.target.value);a=i,d(c[i])}),h(n.color),d(n.brightness);const t=document.getElementById("colorMenu");t&&!n.isColorMenuOpen&&(t.style.display="none",t.style.opacity="0"),typeof PluginMessageHandler>"u"&&window.addEventListener("keydown",l=>{l.code==="Space"&&(l.preventDefault(),window.dispatchEvent(new CustomEvent("sideClick"))),l.code==="ArrowUp"&&(l.preventDefault(),window.dispatchEvent(new CustomEvent("scrollUp"))),l.code==="ArrowDown"&&(l.preventDefault(),window.dispatchEvent(new CustomEvent("scrollDown")))}),typeof PluginMessageHandler<"u"&&PluginMessageHandler.postMessage(JSON.stringify({message:"Rabbit Flashlight ready! Use scroll wheel for brightness, side button for color menu.",wantsR1Response:!0}))});console.log("Rabbit Flashlight Ready!");console.log("Controls:");console.log("- Scroll wheel: Adjust brightness");console.log("- Side button: Toggle color menu");console.log("- Long press side button: Reset to white");console.log("- Tap color wheel: Change flashlight color");console.log("- Bottom slider: Manual brightness control");
